{"ast":null,"code":"import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA.js';\nexport function getUsers() {\n  return Promise.all([_getUsers()]).then(([users]) => ({\n    users\n  }));\n}\nexport function getQuestions() {\n  return Promise.all([_getQuestions()]).then(([questions]) => ({\n    questions\n  }));\n}\nexport function getInitialData() {\n  return Promise.all([_getUsers(), _getTweets()]).then(([users, tweets]) => ({\n    users,\n    tweets\n  }));\n}\nexport function saveQuestionAnswer(info) {\n  return _saveQuestionAnswer(info);\n}\nexport function saveQuestion(info) {\n  return _saveQuestion(info);\n}","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/utils/api.js"],"names":["_getUsers","_getQuestions","_saveQuestion","_saveQuestionAnswer","getUsers","Promise","all","then","users","getQuestions","questions","getInitialData","_getTweets","tweets","saveQuestionAnswer","info","saveQuestion"],"mappings":"AAAA,SACEA,SADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,mBAJF,QAKO,YALP;AAOA,OAAO,SAASC,QAAT,GAAqB;AAC1B,SAAOC,OAAO,CAACC,GAAR,CAAY,CACjBN,SAAS,EADQ,CAAZ,EAEJO,IAFI,CAEC,CAAC,CAACC,KAAD,CAAD,MAAc;AACpBA,IAAAA;AADoB,GAAd,CAFD,CAAP;AAKD;AAED,OAAO,SAASC,YAAT,GAAyB;AAC9B,SAAOJ,OAAO,CAACC,GAAR,CAAY,CACjBL,aAAa,EADI,CAAZ,EAEJM,IAFI,CAEC,CAAC,CAACG,SAAD,CAAD,MAAkB;AACxBA,IAAAA;AADwB,GAAlB,CAFD,CAAP;AAKD;AAED,OAAO,SAASC,cAAT,GAA2B;AAChC,SAAON,OAAO,CAACC,GAAR,CAAY,CACjBN,SAAS,EADQ,EAEjBY,UAAU,EAFO,CAAZ,EAGJL,IAHI,CAGC,CAAC,CAACC,KAAD,EAAQK,MAAR,CAAD,MAAsB;AAC5BL,IAAAA,KAD4B;AAE5BK,IAAAA;AAF4B,GAAtB,CAHD,CAAP;AAOD;AAED,OAAO,SAASC,kBAAT,CAA6BC,IAA7B,EAAmC;AACxC,SAAOZ,mBAAmB,CAACY,IAAD,CAA1B;AACD;AAED,OAAO,SAASC,YAAT,CAAuBD,IAAvB,EAA6B;AAClC,SAAOb,aAAa,CAACa,IAAD,CAApB;AACD","sourcesContent":["import {\n  _getUsers,\n  _getQuestions,\n  _saveQuestion,\n  _saveQuestionAnswer,\n} from './_DATA.js'\n\nexport function getUsers () {\n  return Promise.all([\n    _getUsers(),\n  ]).then(([users]) => ({\n    users,\n  }))\n}\n\nexport function getQuestions () {\n  return Promise.all([\n    _getQuestions(),\n  ]).then(([questions]) => ({\n    questions,\n  }))\n}\n\nexport function getInitialData () {\n  return Promise.all([\n    _getUsers(),\n    _getTweets(),\n  ]).then(([users, tweets]) => ({\n    users,\n    tweets,\n  }))\n}\n\nexport function saveQuestionAnswer (info) {\n  return _saveQuestionAnswer(info)\n}\n\nexport function saveQuestion (info) {\n  return _saveQuestion(info)\n}"]},"metadata":{},"sourceType":"module"}