{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { handleQuestions } from '../actions/shared.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  componentDidMount() {\n    if (this.props.authedUser === '') {\n      this.props.history.push(\"/\");\n    } else {\n      this.props.dispatch(handleQuestions());\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"nav nav-tabs mb-3\",\n        id: \"ex1\",\n        role: \"tablist\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"nav-item\",\n          role: \"presentation\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"nav-link active\",\n            id: \"ex1-tab-1\",\n            \"data-mdb-toggle\": \"tab\",\n            href: \"#ex1-tabs-1\",\n            role: \"tab\",\n            \"aria-controls\": \"ex1-tabs-1\",\n            \"aria-selected\": \"true\",\n            children: \"Unanswered Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"nav-item\",\n          role: \"presentation\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"nav-link\",\n            id: \"ex1-tab-2\",\n            \"data-mdb-toggle\": \"tab\",\n            href: \"#ex1-tabs-2\",\n            role: \"tab\",\n            \"aria-controls\": \"ex1-tabs-2\",\n            \"aria-selected\": \"false\",\n            children: \"Answered Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"tab-content\",\n        id: \"ex1-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"tab-pane fade show active\",\n          id: \"ex1-tabs-1\",\n          role: \"tabpanel\",\n          \"aria-labelledby\": \"ex1-tab-1\",\n          children: \"Tab 1 content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"tab-pane fade\",\n          id: \"ex1-tabs-2\",\n          role: \"tabpanel\",\n          \"aria-labelledby\": \"ex1-tab-2\",\n          children: \"Tab 2 content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}) {\n  //const answeredQuestions = Object.keys(users[authedUser].answers)\n  //const unansweredQuestions = Object.keys(questions).filter(v => !bar.includes(v));\n  return {\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/Home.js"],"names":["React","Component","connect","NavLink","handleQuestions","Home","componentDidMount","props","authedUser","history","push","dispatch","render","mapStateToProps","users","questions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAE5BK,EAAAA,iBAAiB,GAAG;AAClB,QAAG,KAAKC,KAAL,CAAWC,UAAX,KAA0B,EAA7B,EAAiC;AAC/B,WAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KAFD,MAGK;AACF,WAAKH,KAAL,CAAWI,QAAX,CAAoBP,eAAe,EAAnC;AACF;AACF;;AAEDQ,EAAAA,MAAM,GAAG;AAER,wBACC;AAAA,8BACG;AAAI,QAAA,KAAK,EAAC,mBAAV;AAA8B,QAAA,EAAE,EAAC,KAAjC;AAAuC,QAAA,IAAI,EAAC,SAA5C;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,cAA1B;AAAA,iCACE;AAAG,YAAA,KAAK,EAAC,iBAAT;AAA2B,YAAA,EAAE,EAAC,WAA9B;AAA0C,+BAAgB,KAA1D;AAAgE,YAAA,IAAI,EAAC,aAArE;AAAmF,YAAA,IAAI,EAAC,KAAxF;AACE,6BAAc,YADhB;AAC6B,6BAAc,MAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAI,UAAA,KAAK,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,cAA1B;AAAA,iCACE;AAAG,YAAA,KAAK,EAAC,UAAT;AAAoB,YAAA,EAAE,EAAC,WAAvB;AAAmC,+BAAgB,KAAnD;AAAyD,YAAA,IAAI,EAAC,aAA9D;AAA4E,YAAA,IAAI,EAAC,KAAjF;AACE,6BAAc,YADhB;AAC6B,6BAAc,OAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAYG;AAAK,QAAA,KAAK,EAAC,aAAX;AAAyB,QAAA,EAAE,EAAC,aAA5B;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,2BAAX;AAAuC,UAAA,EAAE,EAAC,YAA1C;AAAuD,UAAA,IAAI,EAAC,UAA5D;AAAuE,6BAAgB,WAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,KAAK,EAAC,eAAX;AAA2B,UAAA,EAAE,EAAC,YAA9B;AAA2C,UAAA,IAAI,EAAC,UAAhD;AAA2D,6BAAgB,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZH;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAwBA;;AArC2B;;AAwC7B,SAASC,eAAT,CAAyB;AAACL,EAAAA,UAAD;AAAYM,EAAAA,KAAZ;AAAkBC,EAAAA;AAAlB,CAAzB,EAAuD;AACrD;AACC;AACA,SAAO;AACLP,IAAAA;AADK,GAAP;AAIF;;AACD,eAAeN,OAAO,CAACW,eAAD,CAAP,CAAyBR,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { handleQuestions } from '../actions/shared.js'\n\nclass Home extends Component {\n  \n componentDidMount() {\n   if(this.props.authedUser === '') {\n     this.props.history.push(\"/\")\n   }\n   else {\n      this.props.dispatch(handleQuestions())\n   }\n }\n  \n render() { \n  \n  return (\n   <div>\n      <ul class=\"nav nav-tabs mb-3\" id=\"ex1\" role=\"tablist\">\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link active\" id=\"ex1-tab-1\" data-mdb-toggle=\"tab\" href=\"#ex1-tabs-1\" role=\"tab\"\n            aria-controls=\"ex1-tabs-1\" aria-selected=\"true\" >Unanswered Questions</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" id=\"ex1-tab-2\" data-mdb-toggle=\"tab\" href=\"#ex1-tabs-2\" role=\"tab\"\n            aria-controls=\"ex1-tabs-2\" aria-selected=\"false\">Answered Questions</a>\n        </li>       \n      </ul>\n\n      <div class=\"tab-content\" id=\"ex1-content\">\n        <div class=\"tab-pane fade show active\" id=\"ex1-tabs-1\" role=\"tabpanel\" aria-labelledby=\"ex1-tab-1\">\n          Tab 1 content\n        </div>\n        <div class=\"tab-pane fade\" id=\"ex1-tabs-2\" role=\"tabpanel\" aria-labelledby=\"ex1-tab-2\">\n          Tab 2 content\n        </div>\n      </div>\n\n    </div>\n  )\n }\n}\n\nfunction mapStateToProps({authedUser,users,questions}) {\n  //const answeredQuestions = Object.keys(users[authedUser].answers)\n   //const unansweredQuestions = Object.keys(questions).filter(v => !bar.includes(v));\n   return {\n     authedUser,\n     \n   }\n}\nexport default connect(mapStateToProps)(Home)"]},"metadata":{},"sourceType":"module"}