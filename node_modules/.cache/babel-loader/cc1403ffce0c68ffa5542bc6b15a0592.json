{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/CardBody.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardBody extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onRBChange = (event, value) => {\n      this.setState(() => ({\n        selectedOption: value\n      }));\n    };\n  }\n\n  render() {\n    const {\n      question,\n      isQuestionPage\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      style: {\n        textAlign: 'left',\n        borderLeft: '1px solid lightGray'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        class: \"card-title h5 h4-sm\",\n        children: \"Would You Rather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this), isQuestionPage ? /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text\",\n        children: question.answers.map(id => {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"r1\",\n                type: \"radio\",\n                checked: id === this.state.selectedOption,\n                onChange: e => this.onRBChange(e, id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"r1\",\n                type: \"radio\",\n                checked: id === this.state.selectedOption,\n                onChange: e => this.onRBChange(e, id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text\",\n        children: [question.optionOne.text, \" ...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    props\n  };\n}\n\nexport default connect(mapStateToProps)(CardBody);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/CardBody.js"],"names":["React","Component","Redirect","Link","withRouter","connect","CardBody","onRBChange","event","value","setState","selectedOption","render","question","isQuestionPage","props","textAlign","borderLeft","answers","map","id","state","e","optionOne","text","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAK/BM,UAL+B,GAKlB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,WAAKC,QAAL,CAAc,OAAO;AACpBC,QAAAA,cAAc,EAAEF;AADI,OAAP,CAAd;AAGH,KAT8B;AAAA;;AAY/BG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAA6B,KAAKC,KAAxC;AACA,wBACQ;AAAK,MAAA,KAAK,EAAC,WAAX;AAAuB,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC,MAAX;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAA9B;AAAA,8BACC;AAAI,QAAA,KAAK,EAAC,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAENH,cAAc,gBACE;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA,kBACDD,QAAQ,CAACK,OAAT,CAAiBC,GAAjB,CAAsBC,EAAD,IAAQ;AACvB;AAAA;AAAA,oCAED;AAAA,2CAAQ;AAAO,gBAAA,IAAI,EAAC,IAAZ;AAAiB,gBAAA,IAAI,EAAC,OAAtB;AAA8B,gBAAA,OAAO,EAAEA,EAAE,KAAK,KAAKC,KAAL,CAAWV,cAAzD;AACA,gBAAA,QAAQ,EAAGW,CAAD,IAAO,KAAKf,UAAL,CAAgBe,CAAhB,EAAkBF,EAAlB;AADjB;AAAA;AAAA;AAAA;AAAA,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFC,eAID;AAAA,2CAAQ;AAAO,gBAAA,IAAI,EAAC,IAAZ;AAAiB,gBAAA,IAAI,EAAC,OAAtB;AAA8B,gBAAA,OAAO,EAAEA,EAAE,KAAK,KAAKC,KAAL,CAAWV,cAAzD;AACA,gBAAA,QAAQ,EAAGW,CAAD,IAAO,KAAKf,UAAL,CAAgBe,CAAhB,EAAmBF,EAAnB;AADjB;AAAA;AAAA;AAAA;AAAA,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJC;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpB,SARc;AADC;AAAA;AAAA;AAAA;AAAA,cADF,gBAcF;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA,mBAAsBP,QAAQ,CAACU,SAAT,CAAmBC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAuBF;;AArC+B;;AAwCjC,SAASC,eAAT,CAAyBJ,KAAzB,EAA+BN,KAA/B,EAAsC;AACnC,SAAO;AACTA,IAAAA;AADS,GAAP;AAGF;;AACD,eAAeV,OAAO,CAACoB,eAAD,CAAP,CAAyBnB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass CardBody extends Component {\n  state :{\n    selectedOption : ''\n  }\n  \n  onRBChange = (event, value) => {\n      this.setState(() => ({\n       selectedOption: value,\n      })) \n  }\n  \n  \n  render() { \n    const {question, isQuestionPage} = this.props\n    return (\n            <div class=\"card-body\" style={{textAlign:'left',borderLeft: '1px solid lightGray'}}>\n             <h4 class=\"card-title h5 h4-sm\">Would You Rather</h4>\n\t\t\t\t{ isQuestionPage ? (\n                      <p class=\"card-text\">\n                 \t\t{ question.answers.map((id) => {\n                           <div>\n                          \n                          <label> <input name=\"r1\" type=\"radio\" checked={id === this.state.selectedOption} \n                                  onChange={(e) => this.onRBChange(e,id)} /></label>\n                          <label> <input name=\"r1\" type=\"radio\" checked={id === this.state.selectedOption}\n                                  onChange={(e) => this.onRBChange(e, id)} /></label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})} \n                     </p>\n\t\t\t\t\t) :\n\t\t\t\t\t(\n                  <p class=\"card-text\">{question.optionOne.text} ...</p> \n                \t) \n\t\t\t\t\n\t\t\t\t}\n            </div>\n  \t\t)\n\t}\n}\n\nfunction mapStateToProps(state,props) {\n   return {\n\tprops\n   }\n}\nexport default connect(mapStateToProps)(CardBody)"]},"metadata":{},"sourceType":"module"}