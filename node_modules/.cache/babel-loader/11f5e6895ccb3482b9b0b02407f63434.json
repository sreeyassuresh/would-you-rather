{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/Card.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PollCard from \"./PollCard\";\nimport LeaderCard from \"./LeaderCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  renderElement() {\n    const {\n      user,\n      isLeaderShip,\n      hasAnswered\n    } = this.props;\n    if (isLeaderShip) return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [user.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 30\n    }, this);else if (hasAnswered) {\n      return /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [user.name, \" asked \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [user.name, \" asks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      user,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card_color\",\n        style: {\n          margin: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: this.renderElement()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card flex-row card_color col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatarURL,\n            alt: `Avatar of ${user.name}`,\n            className: \"card-img-left avatar_card col-md-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: isLeaderShip ? /*#__PURE__*/_jsxDEV(LeaderCard, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(PollCard, {\n              isQuestionPage: isQuestionPage,\n              question: question,\n              hasAnswered: hasAnswered,\n              answer: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  users,\n  questions,\n  authedUser\n}, props) {\n  const id = props.id ? props.id : props.match.params.id;\n  const isLeaderShip = props.isLeaderShip;\n  const isQuestionPage = props.match ? props.match.params.id ? true : false : false;\n  let user = {};\n\n  if (isLeaderShip) {\n    user = props.user;\n    return {\n      user,\n      isLeaderShip,\n      isQuestionPage\n    };\n  } else {\n    const question = questions[id];\n    user = users[question.author];\n    const hasAnswered = Object.keys(users[authedUser].answers).includes(id) ? true : false;\n    return {\n      user,\n      id,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer: hasAnswered ? users[authedUser].answers[id] : \"\"\n    };\n  }\n}\n\nexport default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/Card.js"],"names":["React","Component","connect","PollCard","LeaderCard","Card","renderElement","user","isLeaderShip","hasAnswered","props","name","render","isQuestionPage","question","answer","margin","avatarURL","mapStateToProps","users","questions","authedUser","id","match","params","author","Object","keys","answers","includes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport PollCard from \"./PollCard\"\nimport LeaderCard from \"./LeaderCard\"\n\nclass Card extends Component {\n  \n  renderElement() {\n    \n    const { user, isLeaderShip, hasAnswered } = this.props\n\n    if (isLeaderShip) return <strong>{user.name} </strong>\n    else if (hasAnswered) {\n      return <strong>{user.name} asked </strong>\n    } else {\n      return <strong>{user.name} asks</strong>\n    }\n  }\n\n  render() {\n    const {\n      user,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer,\n    } = this.props\n\n    return (\n      <div>\n        <div className='card card_color' style={{ margin: \"25px\" }}>\n          <div className='card-header'>{this.renderElement()}</div>\n          <div className='card flex-row card_color col-md-12'>\n            <img\n              src={user.avatarURL}\n              alt={`Avatar of ${user.name}`}\n              className='card-img-left avatar_card col-md-2'\n            />\n            <div className='col-md-8'>\n              {isLeaderShip ? (\n                <LeaderCard user={user} />\n              ) : (\n                <PollCard\n                  isQuestionPage={isQuestionPage}\n                  question={question}\n                  hasAnswered={hasAnswered}\n                  answer={answer}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ users, questions, authedUser }, props) {\n  const id = props.id ? props.id : props.match.params.id\n  const isLeaderShip = props.isLeaderShip\n  const isQuestionPage = props.match\n    ? props.match.params.id\n      ? true\n      : false\n    : false\n  let user = {}\n  if (isLeaderShip) {\n    user = props.user\n    return {\n      user,\n      isLeaderShip,\n      isQuestionPage,\n    }\n  } else {\n  \n    const question = questions[id]\n    user = users[question.author]\n    const hasAnswered = Object.keys(users[authedUser].answers).includes(id)\n      ? true\n      : false\n    return {\n      user,\n      id,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer: hasAnswered ? users[authedUser].answers[id] : \"\",\n    }\n  }\n}\nexport default connect(mapStateToProps)(Card)\n"]},"metadata":{},"sourceType":"module"}