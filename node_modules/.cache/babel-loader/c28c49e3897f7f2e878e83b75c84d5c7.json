{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/CardBody.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardBody extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onRBChange = (event, value) => {\n      this.setState(() => ({\n        selectedOption: value\n      }));\n    };\n  }\n\n  render() {\n    const {\n      question,\n      isQuestionPage\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      style: {\n        textAlign: 'left',\n        borderLeft: '1px solid lightGray'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        class: \"card-title h5 h4-sm\",\n        children: \"Would You Rather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this), isQuestionPage ? /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"r1\",\n            type: \"radio\",\n            checked: optionOne === this.state.selectedOption,\n            onChange: e => {\n              this.setState({\n                myValue: true\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"r1\",\n            type: \"radio\",\n            checked: optionTwo === this.state.selectedOption,\n            onChange: e => {\n              this.setState({\n                myValue: false\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text\",\n        children: [question.optionOne.text, \" ...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    props\n  };\n}\n\nexport default connect(mapStateToProps)(CardBody);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/CardBody.js"],"names":["React","Component","Redirect","Link","withRouter","connect","CardBody","onRBChange","event","value","setState","selectedOption","render","question","isQuestionPage","props","textAlign","borderLeft","optionOne","state","e","myValue","optionTwo","text","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAK/BM,UAL+B,GAKlB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,WAAKC,QAAL,CAAc,OAAO;AACpBC,QAAAA,cAAc,EAAEF;AADI,OAAP,CAAd;AAGH,KAT8B;AAAA;;AAY/BG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAA6B,KAAKC,KAAxC;AACA,wBACQ;AAAK,MAAA,KAAK,EAAC,WAAX;AAAuB,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC,MAAX;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAA9B;AAAA,8BACC;AAAI,QAAA,KAAK,EAAC,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAENH,cAAc,gBACE;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA,gCACH;AAAA,uCAAQ;AAAO,YAAA,IAAI,EAAC,IAAZ;AAAiB,YAAA,IAAI,EAAC,OAAtB;AAA8B,YAAA,OAAO,EAAEI,SAAS,KAAK,KAAKC,KAAL,CAAWR,cAAhE;AACnB,YAAA,QAAQ,EAAES,CAAC,IAAI;AAAC,mBAAKV,QAAL,CAAc;AAAEW,gBAAAA,OAAO,EAAE;AAAX,eAAd;AAAiC;AAD9B;AAAA;AAAA;AAAA;AAAA,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADG,eAGR;AAAA,uCAAQ;AAAO,YAAA,IAAI,EAAC,IAAZ;AAAiB,YAAA,IAAI,EAAC,OAAtB;AAA8B,YAAA,OAAO,EAAEC,SAAS,KAAK,KAAKH,KAAL,CAAWR,cAAhE;AACH,YAAA,QAAQ,EAAES,CAAC,IAAI;AAAE,mBAAKV,QAAL,CAAc;AAAEW,gBAAAA,OAAO,EAAE;AAAX,eAAd;AAAoC;AADlD;AAAA;AAAA;AAAA;AAAA,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHQ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBASF;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA,mBAAsBR,QAAQ,CAACK,SAAT,CAAmBK,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAXN;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAkBF;;AAhC+B;;AAmCjC,SAASC,eAAT,CAAyBL,KAAzB,EAA+BJ,KAA/B,EAAsC;AACnC,SAAO;AACTA,IAAAA;AADS,GAAP;AAGF;;AACD,eAAeV,OAAO,CAACmB,eAAD,CAAP,CAAyBlB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass CardBody extends Component {\n  state :{\n    selectedOption : ''\n  }\n  \n  onRBChange = (event, value) => {\n      this.setState(() => ({\n       selectedOption: value,\n      })) \n  }\n  \n  \n  render() { \n    const {question, isQuestionPage} = this.props\n    return (\n            <div class=\"card-body\" style={{textAlign:'left',borderLeft: '1px solid lightGray'}}>\n             <h4 class=\"card-title h5 h4-sm\">Would You Rather</h4>\n\t\t\t\t{ isQuestionPage ? (\n                      <p class=\"card-text\">\n                 \t\t<label> <input name=\"r1\" type=\"radio\" checked={optionOne === this.state.selectedOption} \n\t\t\t\t\t\t\t\tonChange={e => {this.setState({ myValue: true});}} /></label>\n          \t\t\t\t<label> <input name=\"r1\" type=\"radio\" checked={optionTwo === this.state.selectedOption}\n              \t\t\t\t\tonChange={e => { this.setState({ myValue: false }); }} /></label>\n                     </p>\n\t\t\t\t\t) :\n\t\t\t\t\t(\n                  <p class=\"card-text\">{question.optionOne.text} ...</p> \n                \t) \n\t\t\t\t\n\t\t\t\t}\n            </div>\n  \t\t)\n\t}\n}\n\nfunction mapStateToProps(state,props) {\n   return {\n\tprops\n   }\n}\nexport default connect(mapStateToProps)(CardBody)"]},"metadata":{},"sourceType":"module"}