{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/Poll.js\";\nimport React, { Component } from 'react';\nimport { OPTION_ONE, OPTION_TWO } from './PollCard';\nimport { connect } from 'react-redux';\nimport { handleSaveQuestionAnswer } from '../actions/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Poll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: OPTION_ONE\n    };\n\n    this.onRBChange = (event, value) => {\n      this.setState(() => ({\n        selectedOption: value\n      }));\n    };\n\n    this.onPollSubmit = e => {\n      e.preventDefault();\n      const {\n        dispatch,\n        question\n      } = this.props;\n      dispatch(handleSaveQuestionAnswer({\n        qid: question.id,\n        answer: this.state.selectedOption\n      }));\n    };\n  }\n\n  render() {\n    const {\n      question\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"r1\",\n            type: \"radio\",\n            checked: OPTION_ONE === this.state.selectedOption,\n            onChange: e => this.onRBChange(e, OPTION_ONE)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"rdbOption\",\n          children: [\" \", question.optionOne.text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"r1\",\n            type: \"radio\",\n            checked: OPTION_TWO === this.state.selectedOption,\n            onChange: e => this.onRBChange(e, OPTION_TWO)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"rdbOption\",\n          children: [\" \", question.optionTwo.text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"d-grid gap-2\",\n        style: {\n          marginTop: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-info btn-Poll\",\n          type: \"button\",\n          onClick: this.onPollSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    props\n  };\n}\n\nexport default connect(mapStateToProps)(Poll);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/Poll.js"],"names":["React","Component","OPTION_ONE","OPTION_TWO","connect","handleSaveQuestionAnswer","Poll","state","selectedOption","onRBChange","event","value","setState","onPollSubmit","e","preventDefault","dispatch","question","props","qid","id","answer","render","optionOne","text","optionTwo","marginTop","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAUC,UAAV,EAAsBC,UAAtB,QAAwC,YAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACPC,MAAAA,cAAc,EAAGN;AADV,KAFkB;;AAAA,SAM3BO,UAN2B,GAMd,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,WAAKC,QAAL,CAAc,OAAO;AACpBJ,QAAAA,cAAc,EAAEG;AADI,OAAP,CAAd;AAGH,KAV0B;;AAAA,SAY3BE,YAZ2B,GAYXC,CAAD,IAAO;AAEpBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAyB,KAAKC,KAApC;AACDF,MAAAA,QAAQ,CAACX,wBAAwB,CAAC;AACzBc,QAAAA,GAAG,EAAEF,QAAQ,CAACG,EADW;AAEzBC,QAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWC;AAFM,OAAD,CAAzB,CAAR;AAKA,KArB0B;AAAA;;AAuB1Bc,EAAAA,MAAM,GAAG;AACP,UAAM;AAACL,MAAAA;AAAD,QAAa,KAAKC,KAAxB;AAEH,wBACG;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACuB;AAAA,gCACF;AAAA,uCAAQ;AAAO,YAAA,IAAI,EAAC,IAAZ;AAAiB,YAAA,IAAI,EAAC,OAAtB;AAA8B,YAAA,OAAO,EAAEhB,UAAU,KAAK,KAAKK,KAAL,CAAWC,cAAjE;AACA,YAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKL,UAAL,CAAgBK,CAAhB,EAAkBZ,UAAlB;AADjB;AAAA;AAAA;AAAA;AAAA,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,eAGpB;AAAM,UAAA,KAAK,EAAE,WAAb;AAAA,0BAA4Be,QAAQ,CAACM,SAAT,CAAmBC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHoB;AAAA;AAAA;AAAA;AAAA;AAAA,cADvB,eAME;AAAA,gCACmB;AAAA,uCAAQ;AAAO,YAAA,IAAI,EAAC,IAAZ;AAAiB,YAAA,IAAI,EAAC,OAAtB;AAA8B,YAAA,OAAO,EAAErB,UAAU,KAAK,KAAKI,KAAL,CAAWC,cAAjE;AACA,YAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKL,UAAL,CAAgBK,CAAhB,EAAmBX,UAAnB;AADjB;AAAA;AAAA;AAAA;AAAA,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADnB,eAGA;AAAM,UAAA,KAAK,EAAE,WAAb;AAAA,0BAA4Bc,QAAQ,CAACQ,SAAT,CAAmBD,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAK,QAAA,KAAK,EAAC,cAAX;AAA0B,QAAA,KAAK,EAAG;AAACE,UAAAA,SAAS,EAAC;AAAX,SAAlC;AAAA,+BACqB;AAAQ,UAAA,KAAK,EAAC,uBAAd;AAAsC,UAAA,IAAI,EAAC,QAA3C;AACnB,UAAA,OAAO,EAAE,KAAKb,YADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAiBE;;AA3CyB;;AA8C7B,SAASc,eAAT,CAAyBpB,KAAzB,EAAgCW,KAAhC,EAAuC;AACpC,SAAO;AACNA,IAAAA;AADM,GAAP;AAGF;;AAED,eAAed,OAAO,CAACuB,eAAD,CAAP,CAAyBrB,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport  { OPTION_ONE, OPTION_TWO } from './PollCard'\nimport { connect } from 'react-redux'\nimport { handleSaveQuestionAnswer } from '../actions/questions'\n\nclass Poll extends Component {\n  \n   state = {\n    selectedOption : OPTION_ONE\n  }\n  \n  onRBChange = (event, value) => {\n      this.setState(() => ({\n       selectedOption: value,\n      })) \n  }\n  \n  onPollSubmit = (e) => {\n    \n    e.preventDefault()\n    const { dispatch, question } = this.props\n  \tdispatch(handleSaveQuestionAnswer({\n            qid: question.id,\n            answer: this.state.selectedOption,\n          }))\n       \n  }\n  \n   render() { \n     const {question} = this.props\n     \n  return (\n     <div class=\"card-text\">\n                            <div >\n                          <label> <input name=\"r1\" type=\"radio\" checked={OPTION_ONE === this.state.selectedOption} \n                                  onChange={(e) => this.onRBChange(e,OPTION_ONE)} /></label>\n\t\t\t\t\t\t  <span class= 'rdbOption'> { question.optionOne.text } </span>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t<div>\n                          <label> <input name=\"r1\" type=\"radio\" checked={OPTION_TWO === this.state.selectedOption}\n                                  onChange={(e) => this.onRBChange(e, OPTION_TWO)} /></label>\n\t\t\t\t\t\t\t<span class= 'rdbOption'> { question.optionTwo.text } </span>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t<div class=\"d-grid gap-2\" style= {{marginTop:'10px'}}>\n                            <button class=\"btn btn-info btn-Poll\" type=\"button\"\n\t\t\t\t  \t\t\tonClick={this.onPollSubmit}>Submit</button>\n                          </div>\n                     </div> \n  )}\n}\n\nfunction mapStateToProps(state, props) {\n   return {\n    props\n   }\n}\n\nexport default connect(mapStateToProps)(Poll)"]},"metadata":{},"sourceType":"module"}