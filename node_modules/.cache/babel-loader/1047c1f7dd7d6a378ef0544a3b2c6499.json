{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/Card.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PollCard from \"./PollCard\";\nimport LeaderCard from \"./LeaderCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  render() {\n    const {\n      user,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card card_color\",\n        style: {\n          margin: \"25px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  users,\n  questions,\n  authedUser\n}, props) {\n  const id = props.id ? props.id : props.match.params.id;\n  const isLeaderShip = props.isLeaderShip;\n  const isQuestionPage = props.match ? props.match.params.id ? true : false : false;\n  let user = {};\n\n  if (isLeaderShip) {\n    user = props.user;\n    return {\n      user,\n      isLeaderShip,\n      isQuestionPage\n    };\n  } else {\n    const question = questions[id];\n    user = users[question.author];\n    const hasAnswered = Object.keys(users[authedUser].answers).includes(id) ? true : false;\n    return {\n      user,\n      id,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer: hasAnswered ? users[authedUser].answers[id] : \"\"\n    };\n  }\n}\n\nexport default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/Card.js"],"names":["React","Component","connect","PollCard","LeaderCard","Card","render","user","isLeaderShip","isQuestionPage","question","hasAnswered","answer","props","margin","mapStateToProps","users","questions","authedUser","id","match","params","author","Object","keys","answers","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC3BK,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,YAFI;AAGJC,MAAAA,cAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,WALI;AAMJC,MAAAA;AANI,QAOF,KAAKC,KAPT;AASA,wBACE;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,iBAAX;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAApC;AAAA,+BACE;AAAK,UAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AArB0B;;AAwB7B,SAASC,eAAT,CAAyB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAzB,EAA2DL,KAA3D,EAAkE;AAChE,QAAMM,EAAE,GAAGN,KAAK,CAACM,EAAN,GAAWN,KAAK,CAACM,EAAjB,GAAsBN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBF,EAApD;AACA,QAAMX,YAAY,GAAGK,KAAK,CAACL,YAA3B;AACA,QAAMC,cAAc,GAAGI,KAAK,CAACO,KAAN,GACnBP,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBF,EAAnB,GACE,IADF,GAEE,KAHiB,GAInB,KAJJ;AAKA,MAAIZ,IAAI,GAAG,EAAX;;AACA,MAAIC,YAAJ,EAAkB;AAChBD,IAAAA,IAAI,GAAGM,KAAK,CAACN,IAAb;AACA,WAAO;AACLA,MAAAA,IADK;AAELC,MAAAA,YAFK;AAGLC,MAAAA;AAHK,KAAP;AAKD,GAPD,MAOO;AACL,UAAMC,QAAQ,GAAGO,SAAS,CAACE,EAAD,CAA1B;AACAZ,IAAAA,IAAI,GAAGS,KAAK,CAACN,QAAQ,CAACY,MAAV,CAAZ;AACA,UAAMX,WAAW,GAAGY,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACE,UAAD,CAAL,CAAkBO,OAA9B,EAAuCC,QAAvC,CAAgDP,EAAhD,IAChB,IADgB,GAEhB,KAFJ;AAGA,WAAO;AACLZ,MAAAA,IADK;AAELY,MAAAA,EAFK;AAGLX,MAAAA,YAHK;AAILC,MAAAA,cAJK;AAKLC,MAAAA,QALK;AAMLC,MAAAA,WANK;AAOLC,MAAAA,MAAM,EAAED,WAAW,GAAGK,KAAK,CAACE,UAAD,CAAL,CAAkBO,OAAlB,CAA0BN,EAA1B,CAAH,GAAmC;AAPjD,KAAP;AASD;AACF;;AACD,eAAejB,OAAO,CAACa,eAAD,CAAP,CAAyBV,IAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport PollCard from \"./PollCard\"\nimport LeaderCard from \"./LeaderCard\"\n\nclass Card extends Component {\n  render() {\n    const {\n      user,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer,\n    } = this.props\n\n    return (\n      <div>\n        <div class='card card_color' style={{ margin: \"25px\" }}>\n          <div class='card-header'>\n            \n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ users, questions, authedUser }, props) {\n  const id = props.id ? props.id : props.match.params.id\n  const isLeaderShip = props.isLeaderShip\n  const isQuestionPage = props.match\n    ? props.match.params.id\n      ? true\n      : false\n    : false\n  let user = {}\n  if (isLeaderShip) {\n    user = props.user\n    return {\n      user,\n      isLeaderShip,\n      isQuestionPage,\n    }\n  } else {\n    const question = questions[id]\n    user = users[question.author]\n    const hasAnswered = Object.keys(users[authedUser].answers).includes(id)\n      ? true\n      : false\n    return {\n      user,\n      id,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer: hasAnswered ? users[authedUser].answers[id] : \"\",\n    }\n  }\n}\nexport default connect(mapStateToProps)(Card)\n"]},"metadata":{},"sourceType":"module"}