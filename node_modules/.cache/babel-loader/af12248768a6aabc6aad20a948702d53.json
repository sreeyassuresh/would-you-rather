{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { handleQuestions } from '../actions/shared.js';\nimport Card from './Card.js';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  componentDidMount() {\n    if (!this.props && this.props.authedUser === '') {\n      console.log('alert');\n      this.props.history.push(\"/\");\n    } else {\n      this.props.dispatch(handleQuestions());\n    }\n  }\n\n  render() {\n    const {\n      unansweredQuestions,\n      answeredQuestions,\n      questions,\n      users\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            children: \"Unanswered Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: \"Answered Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: unansweredQuestions.map(id => {\n            const question = questions[id];\n            const user = users[question.author];\n            return /*#__PURE__*/_jsxDEV(Card, {\n              question: questions[id],\n              user: user\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 16\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: answeredQuestions.map(id => /*#__PURE__*/_jsxDEV(Card, {\n            id: id\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}) {\n  const values = Object.keys(users[authedUser].answers);\n  const answeredQuestions = Object.keys(questions).filter(v => values.includes(v)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const unansweredQuestions = Object.keys(questions).filter(v => !answeredQuestions.includes(v)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    authedUser,\n    answeredQuestions,\n    unansweredQuestions,\n    users,\n    questions\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/Home.js"],"names":["React","Component","connect","NavLink","handleQuestions","Card","Tab","Tabs","TabList","TabPanel","Home","componentDidMount","props","authedUser","console","log","history","push","dispatch","render","unansweredQuestions","answeredQuestions","questions","users","map","id","question","user","author","mapStateToProps","values","Object","keys","answers","filter","v","includes","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { handleQuestions } from '../actions/shared.js'\nimport Card from './Card.js'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nclass Home extends Component {\n  \n componentDidMount() {\n   if(!this.props &&  this.props.authedUser === '') {\n     console.log('alert')\n     this.props.history.push(\"/\")\n   }\n   else {\n      this.props.dispatch(handleQuestions())\n   }\n }\n  \n render() { \n const { unansweredQuestions, answeredQuestions,questions, users } = this.props\n  return (\n   <div>\n            <Tabs>\n          <TabList>\n            <Tab>Unanswered Questions</Tab>\n            <Tab>Answered Questions</Tab>\n          </TabList>\n\n          <TabPanel>\n    \t\t{ \n    \t\t\tunansweredQuestions.map((id) => {\n    \t\t\tconst question = questions[id]\n   \t\t\t\tconst user = users[question.author]\n                return (\n               <Card key ={id} question={questions[id]} user = {user}/>\n\t\t\t\t)\n\t\t\t\t})} \n    \t\t\n          </TabPanel>\n          <TabPanel>\n           { answeredQuestions.map((id) => (\n               <Card key ={id} id={id}/>\n            ))} \n          </TabPanel>\n        </Tabs>\n    </div>\n  )\n }\n}\n\nfunction mapStateToProps({authedUser,users,questions}) {\n  const values = Object.keys(users[authedUser].answers)\n  const answeredQuestions= Object.keys(questions).filter(v => values.includes(v))\n  \t\t\t\t\t\t\t.sort((a,b) => questions[b].timestamp - questions[a].timestamp)\n   const unansweredQuestions = Object.keys(questions).filter(v => !answeredQuestions.includes(v))\n   \t\t\t\t\t\t\t.sort((a,b) => questions[b].timestamp - questions[a].timestamp);\n   return {\n     authedUser,\n     answeredQuestions,\n     unansweredQuestions,\n     users,\n     questions\n   }\n}\nexport default connect(mapStateToProps)(Home)"]},"metadata":{},"sourceType":"module"}