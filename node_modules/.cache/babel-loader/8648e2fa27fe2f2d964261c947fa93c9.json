{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/Card.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link, withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/questions/${props.question.id}`,\n      className: \"tweet\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        style: {\n          margin: '25px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [props.user.name, \" asks \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card flex-row \",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: props.user.avatarURL,\n            alt: `Avatar of ${props.user.name}`,\n            className: \"card-img-left avatar_card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            style: {\n              textAlign: 'left',\n              borderLeft: '1px solid lightGray'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              class: \"card-title h5 h4-sm\",\n              children: \"Would You Rather\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"card-text\",\n              children: [props.question.optionOne.text, \" ...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              class: \"card-link\",\n              children: \"View Poll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}) {\n  const values = Object.keys(users[authedUser].answers);\n  const answeredQuestions = Object.keys(questions).filter(v => values.includes(v)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const unansweredQuestions = Object.keys(questions).filter(v => !answeredQuestions.includes(v)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    authedUser,\n    answeredQuestions,\n    unansweredQuestions,\n    users,\n    questions\n  };\n}\n\nexport default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/Card.js"],"names":["React","Component","Redirect","Link","withRouter","Card","render","props","question","id","margin","user","name","avatarURL","textAlign","borderLeft","optionOne","text","mapStateToProps","authedUser","users","questions","values","Object","keys","answers","answeredQuestions","filter","v","includes","sort","a","b","timestamp","unansweredQuestions","connect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass Card extends Component {\n  render() { \n    return (\n       <Link to={`/questions/${props.question.id}`} className='tweet'>\n        \t<div class=\"card\" style={{margin:'25px'}}>\n              <div class=\"card-header\">\n      \t\t\t<strong>{props.user.name} asks </strong>\n              </div>\n             <div class=\"card flex-row \">\n\t\t\t\t<img src={props.user.avatarURL} alt={`Avatar of ${props.user.name}`} \n                className='card-img-left avatar_card'/>\n                <div class=\"card-body\" style={{textAlign:'left',borderLeft: '1px solid lightGray'}}>\n                  <h4 class=\"card-title h5 h4-sm\">Would You Rather</h4>\n                  <p class=\"card-text\">{props.question.optionOne.text} ...</p>\n                   <a href=\"#\" class=\"card-link\">View Poll</a>\n                </div>\n              </div>\n            </div>\n            </Link>\n  )\n }\n}\n\nfunction mapStateToProps({authedUser,users,questions}) {\n  const values = Object.keys(users[authedUser].answers)\n  const answeredQuestions= Object.keys(questions).filter(v => values.includes(v))\n  \t\t\t\t\t\t\t.sort((a,b) => questions[b].timestamp - questions[a].timestamp)\n   const unansweredQuestions = Object.keys(questions).filter(v => !answeredQuestions.includes(v))\n   \t\t\t\t\t\t\t.sort((a,b) => questions[b].timestamp - questions[a].timestamp);\n   return {\n     authedUser,\n     answeredQuestions,\n     unansweredQuestions,\n     users,\n     questions\n   }\n}\nexport default connect(mapStateToProps)(Card)"]},"metadata":{},"sourceType":"module"}