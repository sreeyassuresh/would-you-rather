{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/Card.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PollCard from './PollCard';\nimport LeaderCard from './LeaderCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  render() {\n    const {\n      user,\n      id,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card card_color\",\n        style: {\n          margin: '25px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-header\",\n          children: isLeaderShip ? /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [user.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 23\n          }, this) : [hasAnswered ? /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [user.name, \" asked \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [user.name, \" asks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 62\n          }, this)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card flex-row card_color col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatarURL,\n            alt: `Avatar of ${user.name}`,\n            className: \"card-img-left avatar_card col-md-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-8\",\n            children: isLeaderShip ? /*#__PURE__*/_jsxDEV(LeaderCard, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(PollCard, {\n              isQuestionPage: isQuestionPage,\n              question: question,\n              hasAnswered: hasAnswered,\n              answer: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  users,\n  questions,\n  authedUser\n}, props) {\n  const id = props.id ? props.id : props.match.params.id;\n  const isLeaderShip = props.isLeaderShip;\n  const isQuestionPage = props.match ? props.match.params.id ? true : false : false;\n  let user = {};\n\n  if (isLeaderShip) {\n    user = props.user;\n    return {\n      user,\n      isLeaderShip,\n      isQuestionPage\n    };\n  } else {\n    const question = questions[id];\n    user = users[question.author];\n    const hasAnswered = Object.keys(users[authedUser].answers).includes(id) ? true : false;\n    return {\n      user,\n      id,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer: hasAnswered ? users[authedUser].answers[id] : ''\n    };\n  }\n}\n\nexport default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/Card.js"],"names":["React","Component","withRouter","connect","PollCard","LeaderCard","Card","render","user","id","isLeaderShip","isQuestionPage","question","hasAnswered","answer","props","margin","name","avatarURL","mapStateToProps","users","questions","authedUser","match","params","author","Object","keys","answers","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PollCard from './PollCard'\nimport LeaderCard from './LeaderCard'\nclass Card extends Component {\n  render() { \n    const {user, id, isLeaderShip, isQuestionPage, question, hasAnswered, answer} = this.props\n    return (\n       \t<div>\n        \t<div class=\"card card_color\" style={{margin:'25px'}}>\n              <div class=\"card-header\">\n\t\t\t\t{isLeaderShip ?  (<strong>{user.name} </strong>) :\n\t\t\t\t[ hasAnswered ? (<strong>{user.name} asked </strong>) : (<strong>{user.name} asks</strong>)\n\t\t\t\t]}\n              </div>\n             <div class=\"card flex-row card_color col-md-12\">\n\t\t\t\t<img src={user.avatarURL} alt={`Avatar of ${user.name}`} \n                className='card-img-left avatar_card col-md-2'/>\n                <div class=\"col-md-8\">\n                { isLeaderShip ?  \n                (\n                <LeaderCard user={user}/>\n                ) :\n                (<PollCard isQuestionPage ={isQuestionPage} \n                question={question} hasAnswered={hasAnswered} answer={answer}/>\n                )}\n                </div>\n              </div>\n            </div>\n        </div>    \n  \t\t)\n\t}\n}\n\nfunction mapStateToProps({users, questions, authedUser}, props) {\n   const id = props.id ? props.id : props.match.params.id \n   const isLeaderShip = props.isLeaderShip\n   const isQuestionPage = props.match ? (props.match.params.id ? true : false ) : false\n   let user = {}\n   if(isLeaderShip) {   \n    user = props.user\n      return {\n        user,\n        isLeaderShip,\n        isQuestionPage\n\n       }\n   }\n   else {\n   const question = questions[id]\n   user = users[question.author]\n   const hasAnswered = Object.keys(users[authedUser].answers).includes(id) ? true : false\n      return {\n      user,\n      id,\n      isLeaderShip,\n      isQuestionPage,\n      question,\n      hasAnswered,\n      answer: hasAnswered ? users[authedUser].answers[id]:''\n\n     }\n   }\n  \n}\nexport default connect(mapStateToProps)(Card)"]},"metadata":{},"sourceType":"module"}