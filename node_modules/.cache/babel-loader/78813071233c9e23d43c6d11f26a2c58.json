{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/LeaderBoard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from './Card.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LeaderBoard extends Component {\n  render() {\n    const {\n      users\n    } = this.props;\n    const isLeaderShipPage = true;\n    users.map(currUser => {\n      console.log('sortedUsers', currUser.id);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(currUser => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: currUser.id,\n          user: currUser,\n          isLeaderShip: isLeaderShipPage\n        }, currUser.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  users\n}) {\n  const keys = Object.keys(users);\n  let sortedUsers = [];\n  keys.map(id => {\n    const user = users[id];\n    const answers = Object.keys(user.answers).length;\n    const questions = user.questions.length;\n    const total = answers + questions;\n    const sortedUser = { ...user,\n      answers,\n      questions,\n      total\n    };\n    sortedUsers.push(sortedUser);\n  });\n\n  if (sortedUsers.length > 0) {\n    sortedUsers = sortedUsers.sort((a, b) => a.total < b.total ? 1 : -1);\n  }\n\n  return {\n    users: sortedUsers\n  };\n}\n\nexport default connect(mapStateToProps)(LeaderBoard);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/LeaderBoard.js"],"names":["React","Component","connect","Card","LeaderBoard","render","users","props","isLeaderShipPage","map","currUser","console","log","id","mapStateToProps","keys","Object","sortedUsers","user","answers","length","questions","total","sortedUser","push","sort","a","b"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AACA,UAAMC,gBAAgB,GAAG,IAAzB;AACCF,IAAAA,KAAK,CAACG,GAAN,CAAUC,QAAQ,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA4BF,QAAQ,CAACG,EAArC;AACD,KAFD;AAID,wBACG;AAAA,gBAECP,KAAK,CAACG,GAAN,CAAUC,QAAQ,IAAI;AAErB,4BAAQ,QAAC,IAAD;AAAyB,UAAA,EAAE,EAAGA,QAAQ,CAACG,EAAvC;AAA2C,UAAA,IAAI,EAAGH,QAAlD;AAA4D,UAAA,YAAY,EAAGF;AAA3E,WAAYE,QAAQ,CAACG,EAArB;AAAA;AAAA;AAAA;AAAA,gBAAR;AAEA,OAJD;AAFD;AAAA;AAAA;AAAA;AAAA,YADH;AAWD;;AAnB+B;;AAsBpC,SAASC,eAAT,CAAyB;AAACR,EAAAA;AAAD,CAAzB,EAAkC;AAEhC,QAAMS,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYT,KAAZ,CAAb;AACA,MAAIW,WAAW,GAAG,EAAlB;AACAF,EAAAA,IAAI,CAACN,GAAL,CAAUI,EAAD,IAAQ;AAEd,UAAMK,IAAI,GAAGZ,KAAK,CAACO,EAAD,CAAlB;AACA,UAAMM,OAAO,GAAGH,MAAM,CAACD,IAAP,CAAYG,IAAI,CAACC,OAAjB,EAA0BC,MAA1C;AACA,UAAMC,SAAS,GAAGH,IAAI,CAACG,SAAL,CAAeD,MAAjC;AACA,UAAME,KAAK,GAAGH,OAAO,GAAGE,SAAxB;AACA,UAAME,UAAU,GAAG,EAClB,GAAGL,IADe;AAEjBC,MAAAA,OAFiB;AAGjBE,MAAAA,SAHiB;AAIjBC,MAAAA;AAJiB,KAAnB;AAMAL,IAAAA,WAAW,CAACO,IAAZ,CAAiBD,UAAjB;AACF,GAbD;;AAcC,MAAGN,WAAW,CAACG,MAAZ,GAAqB,CAAxB,EAA4B;AAE5BH,IAAAA,WAAW,GAAGA,WAAW,CAACQ,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACJ,KAAF,GAAUK,CAAC,CAACL,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAnD,CAAd;AACA;;AACD,SAAO;AACNhB,IAAAA,KAAK,EAAGW;AADF,GAAP;AAID;;AACC,eAAef,OAAO,CAACY,eAAD,CAAP,CAAyBV,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Card from './Card.js'\n\nclass LeaderBoard extends Component {  \t\n    render() { \n      const {users} = this.props\n      const isLeaderShipPage = true\n       users.map(currUser => {\n         console.log('sortedUsers' , currUser.id)\n       });\n  \n      return (\n         <div>\n        {\n          users.map(currUser => {\n            \n           return  <Card key ={currUser.id} id= {currUser.id} user ={currUser} isLeaderShip= {isLeaderShipPage}/>\n        \t\n          })} \n        \n         </div>\t\n      )\n    }\n  }\n\nfunction mapStateToProps({users}) {\n  \n  const keys = Object.keys(users)\n  let sortedUsers = []\n  keys.map((id) => {\n    \n   \t const user = users[id]\n     const answers = Object.keys(user.answers).length\n     const questions = user.questions.length\n     const total = answers + questions\n     const sortedUser = {\n      ...user,\n       answers,\n       questions,\n       total     \n     }\n     sortedUsers.push(sortedUser)\n  })\n   if(sortedUsers.length > 0 ) {\n    \n   sortedUsers = sortedUsers.sort((a,b)=> (a.total < b.total ? 1 : -1))\n  }\n  return {\n   users : sortedUsers \n  }\n \n}\n  export default connect(mapStateToProps)(LeaderBoard)"]},"metadata":{},"sourceType":"module"}