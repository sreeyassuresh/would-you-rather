{"ast":null,"code":"var _jsxFileName = \"/home/workspace/would-you-rather/src/components/PollCard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PollResults from \"./PollResults\";\nimport Poll from \"./Poll\";\nimport PollContent from \"./PollContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OPTION_ONE = \"optionOne\";\nexport const OPTION_TWO = \"optionTwo\";\n\nclass PollCard extends Component {\n  renderElement() {\n    const {\n      question,\n      isQuestionPage,\n      hasAnswered,\n      answer\n    } = this.props;\n\n    if (isQuestionPage) {\n      if (hasAnswered) {\n        return /*#__PURE__*/_jsxDEV(PollResults, {\n          question: question,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Poll, {\n          question: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(PollContent, {\n        question: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      question,\n      isQuestionPage,\n      hasAnswered,\n      answer\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      style: {\n        textAlign: \"left\",\n        borderLeft: \"1px solid lightGray\"\n      },\n      children: this.renderElement()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    props\n  };\n}\n\nexport default connect(mapStateToProps)(PollCard);","map":{"version":3,"sources":["/home/workspace/would-you-rather/src/components/PollCard.js"],"names":["React","Component","connect","PollResults","Poll","PollContent","OPTION_ONE","OPTION_TWO","PollCard","renderElement","question","isQuestionPage","hasAnswered","answer","props","render","textAlign","borderLeft","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,OAAO,MAAMC,UAAU,GAAG,WAAnB;AACP,OAAO,MAAMC,UAAU,GAAG,WAAnB;;AAEP,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAE/BQ,EAAAA,aAAa,GAAG;AAEd,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,cAAZ;AAA4BC,MAAAA,WAA5B;AAAyCC,MAAAA;AAAzC,QAAoD,KAAKC,KAA/D;;AAEA,QAAGH,cAAH,EAAmB;AAElB,UAAGC,WAAH,EAAgB;AAEd,4BAAO,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAEF,QAAvB;AAAiC,UAAA,MAAM,EAAEG;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAAP;AAED,OAJD,MAKO;AACJ,4BAAQ,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAAR;AACA;AACH,KAVD,MAWQ;AAEH,0BAAO,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAEL;;AAGDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,QAAF;AAAYC,MAAAA,cAAZ;AAA4BC,MAAAA,WAA5B;AAAyCC,MAAAA;AAAzC,QAAoD,KAAKC,KAA/D;AAEA,wBACE;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,UAAU,EAAE;AAAjC,OAFT;AAAA,gBAGG,KAAKR,aAAL;AAHH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAnC8B;;AAsCjC,SAASS,eAAT,CAAyBC,KAAzB,EAAgCL,KAAhC,EAAuC;AACrC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD;;AACD,eAAeZ,OAAO,CAACgB,eAAD,CAAP,CAAyBV,QAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport PollResults from \"./PollResults\"\nimport Poll from \"./Poll\"\nimport PollContent from \"./PollContent\"\n\nexport const OPTION_ONE = \"optionOne\"\nexport const OPTION_TWO = \"optionTwo\"\n\nclass PollCard extends Component {\n  \n  renderElement() {\n    \n    const { question, isQuestionPage, hasAnswered, answer } = this.props\n\t\n    if(isQuestionPage) {\n      \n     if(hasAnswered) {\n      \n       return <PollResults question={question} answer={answer} />\n       \n     }\n       else {\n        return  <Poll question={question} />\n       }\n    } \n       else {\n         \n         return <PollContent question={question}/>\n       }\n    \n  }\n\n  \n  render() {\n    const { question, isQuestionPage, hasAnswered, answer } = this.props\n\n    return (\n      <div\n        class='card-body'\n        style={{ textAlign: \"left\", borderLeft: \"1px solid lightGray\" }}>\n        {this.renderElement()}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    props,\n  }\n}\nexport default connect(mapStateToProps)(PollCard)\n"]},"metadata":{},"sourceType":"module"}